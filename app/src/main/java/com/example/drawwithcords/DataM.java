package com.example.drawwithcords;

import android.content.Context;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.regex.Pattern;

public class DataM {
    String tester = "1572585050946,1572585038R,1,16779,17060,203\n" +
"1572585050951,1572585038R,1,16779,17060,203\n" +
"1572585050956,1572585038R,1,16779,17060,203\n" +
"1572585050961,1572585038R,1,16779,17060,203\n" +
"1572585050966,1572585038R,1,16779,17060,203\n" +
"1572585050971,1572585038R,1,16779,17060,202\n" +
"1572585050976,1572585038R,1,16779,17060,203\n" +
"1572585050981,1572585038R,1,16779,17060,203\n" +
"1572585050986,1572585038R,1,16779,17060,204\n" +
"1572585050991,1572585038R,1,16779,17060,204\n" +
"1572585050996,1572585038R,1,16779,17060,204\n" +
"1572585051001,1572585038R,1,16779,17060,203\n" +
"1572585051006,1572585038R,1,16767,17063,202\n" +
"1572585051011,1572585038R,1,16767,17063,202\n" +
"1572585051016,1572585038R,1,16767,17063,203\n" +
"1572585051021,1572585038R,1,16754,17063,203\n" +
"1572585051026,1572585038R,1,16754,17063,203\n" +
"1572585051031,1572585038R,1,16743,17063,202\n" +
"1572585051036,1572585038R,1,16743,17063,201\n" +
"1572585051041,1572585038R,1,16734,17064,200\n" +
"1572585051046,1572585038R,1,16734,17064,200\n" +
"1572585051051,1572585038R,1,16734,17064,200\n" +
"1572585051056,1572585038R,1,16724,17064,201\n" +
"1572585051061,1572585038R,1,16724,17064,202\n" +
"1572585051066,1572585038R,1,16724,17064,205\n" +
"1572585051071,1572585038R,1,16715,17068,208\n" +
"1572585051076,1572585038R,1,16715,17068,213\n" +
"1572585051081,1572585038R,1,16715,17068,217\n" +
"1572585051086,1572585038R,1,16715,17068,223\n" +
"1572585051091,1572585038R,1,16715,17068,229\n" +
"1572585051096,1572585038R,1,16705,17074,235\n" +
"1572585051101,1572585038R,1,16705,17074,241\n" +
"1572585051106,1572585038R,1,16705,17074,247\n" +
"1572585051111,1572585038R,1,16705,17074,255\n" +
"1572585051116,1572585038R,1,16705,17074,264\n" +
"1572585051121,1572585038R,1,16705,17074,273\n" +
"1572585051126,1572585038R,1,16705,17074,283\n" +
"1572585051131,1572585038R,1,16705,17074,291\n" +
"1572585051136,1572585038R,1,16696,17078,297\n" +
"1572585051141,1572585038R,1,16696,17078,303\n" +
"1572585051146,1572585038R,1,16696,17078,309\n" +
"1572585051151,1572585038R,1,16696,17078,317\n" +
"1572585051156,1572585038R,1,16696,17078,330\n" +
"1572585051161,1572585038R,1,16696,17078,348\n" +
"1572585051166,1572585038R,1,16696,17078,370\n" +
"1572585051171,1572585038R,1,16696,17078,394\n" +
"1572585051176,1572585038R,1,16696,17078,418\n" +
"1572585051181,1572585038R,1,16696,17078,438\n" +
"1572585051186,1572585038R,1,16696,17078,456\n" +
"1572585051191,1572585038R,1,16696,17078,473\n" +
"1572585051196,1572585038R,1,16696,17078,490\n" +
"1572585051201,1572585038R,1,16696,17078,503\n" +
"1572585051206,1572585038R,1,16696,17078,514\n" +
"1572585051211,1572585038R,1,16696,17078,521\n" +
"1572585051216,1572585038R,1,16696,17078,527\n" +
"1572585051221,1572585038R,1,16696,17078,533\n" +
"1572585051226,1572585038R,1,16696,17078,538\n" +
"1572585051231,1572585038R,1,16696,17078,544\n" +
"1572585051236,1572585038R,1,16696,17078,551\n" +
"1572585051241,1572585038R,1,16696,17078,558\n" +
"1572585051246,1572585038R,1,16696,17078,567\n" +
"1572585051251,1572585038R,1,16696,17078,575\n" +
"1572585051256,1572585038R,1,16696,17078,584\n" +
"1572585051261,1572585038R,1,16706,17080,596\n" +
"1572585051266,1572585038R,1,16706,17080,609\n" +
"1572585051271,1572585038R,1,16706,17080,626\n" +
"1572585051276,1572585038R,1,16706,17080,648\n" +
"1572585051281,1572585038R,1,16706,17080,671\n" +
"1572585051286,1572585038R,1,16718,17081,698\n" +
"1572585051291,1572585038R,1,16718,17081,729\n" +
"1572585051296,1572585038R,1,16718,17081,763\n" +
"1572585051301,1572585038R,1,16729,17084,799\n" +
"1572585051306,1572585038R,1,16729,17084,836\n" +
"1572585051311,1572585038R,1,16729,17084,869\n" +
"1572585051316,1572585038R,1,16741,17087,900\n" +
"1572585051321,1572585038R,1,16741,17087,928\n" +
"1572585051326,1572585038R,1,16750,17090,951\n" +
"1572585051331,1572585038R,1,16750,17090,971\n" +
"1572585051336,1572585038R,1,16761,17092,988\n" +
"1572585051341,1572585038R,1,16761,17092,1004\n" +
"1572585051346,1572585038R,1,16776,17095,1018\n" +
"1572585051351,1572585038R,1,16776,17095,1032\n" +
"1572585051356,1572585038R,1,16788,17097,1044\n" +
"1572585051361,1572585038R,1,16788,17097,1053\n" +
"1572585051366,1572585038R,1,16797,17098,1060\n" +
"1572585051371,1572585038R,1,16797,17098,1067\n" +
"1572585051376,1572585038R,1,16808,17098,1072\n" +
"1572585051381,1572585038R,1,16808,17098,1077\n" +
"1572585051386,1572585038R,1,16822,17098,1082\n" +
"1572585051391,1572585038R,1,16822,17098,1086\n" +
"1572585051396,1572585038R,1,16833,17098,1090\n" +
"1572585051401,1572585038R,1,16833,17098,1094\n" +
"1572585051406,1572585038R,1,16833,17098,1098\n" +
"1572585051411,1572585038R,1,16833,17098,1102\n" +
"1572585051416,1572585038R,1,16843,17098,1107\n" +
"1572585051421,1572585038R,1,16843,17098,1112\n" +
"1572585051426,1572585038R,1,16843,17098,1119\n" +
"1572585051431,1572585038R,1,16843,17098,1125\n" +
"1572585051436,1572585038R,1,16856,17096,1133\n" +
"1572585051441,1572585038R,1,16856,17096,1141\n" +
"1572585051446,1572585038R,1,16865,17097,1148\n" +
"1572585051451,1572585038R,1,16865,17097,1156\n" +
"1572585051456,1572585038R,1,16875,17098,1162\n" +
"1572585051461,1572585038R,1,16875,17098,1169\n" +
"1572585051466,1572585038R,1,16888,17099,1173\n" +
"1572585051471,1572585038R,1,16888,17099,1177\n" +
"1572585051476,1572585038R,1,16905,17102,1179\n" +
"1572585051481,1572585038R,1,16905,17102,1182\n" +
"1572585051486,1572585038R,1,16921,17106,1186\n" +
"1572585051491,1572585038R,1,16921,17106,1189\n" +
"1572585051496,1572585038R,1,16934,17107,1195\n" +
"1572585051501,1572585038R,1,16934,17107,1200\n" +
"1572585051506,1572585038R,1,16934,17107,1207\n" +
"1572585051511,1572585038R,1,16946,17108,1215\n" +
"1572585051516,1572585038R,1,16946,17108,1223\n" +
"1572585051521,1572585038R,1,16946,17108,1232\n" +
"1572585051526,1572585038R,1,16956,17110,1240\n" +
"1572585051531,1572585038R,1,16956,17110,1247\n" +
"1572585051536,1572585038R,1,16966,17111,1254\n" +
"1572585051541,1572585038R,1,16966,17111,1260\n" +
"1572585051546,1572585038R,1,16979,17112,1266\n" +
"1572585051551,1572585038R,1,16989,17112,1272\n" +
"1572585051556,1572585038R,1,17001,17113,1276\n" +
"1572585051561,1572585038R,1,17016,17113,1281\n" +
"1572585051566,1572585038R,1,17032,17114,1286\n" +
"1572585051571,1572585038R,1,17048,17115,1289\n" +
"1572585051576,1572585038R,1,17065,17117,1291\n" +
"1572585051581,1572585038R,1,17082,17119,1293\n" +
"1572585051586,1572585038R,1,17099,17122,1295\n" +
"1572585051591,1572585038R,1,17116,17125,1296\n" +
"1572585051596,1572585038R,1,17133,17127,1298\n" +
"1572585051601,1572585038R,1,17149,17129,1300\n" +
"1572585051606,1572585038R,1,17166,17131,1301\n" +
"1572585051611,1572585038R,1,17182,17133,1303\n" +
"1572585051616,1572585038R,1,17197,17136,1304\n" +
"1572585051621,1572585038R,1,17211,17138,1306\n" +
"1572585051626,1572585038R,1,17225,17140,1308\n" +
"1572585051631,1572585038R,1,17238,17142,1309\n" +
"1572585051636,1572585038R,1,17252,17143,1310\n" +
"1572585051641,1572585038R,1,17266,17144,1310\n" +
"1572585051646,1572585038R,1,17281,17144,1311\n" +
"1572585051651,1572585038R,1,17293,17144,1314\n" +
"1572585051656,1572585038R,1,17305,17145,1318\n" +
"1572585051661,1572585038R,1,17314,17144,1322\n" +
"1572585051666,1572585038R,1,17324,17143,1325\n" +
"1572585051671,1572585038R,1,17335,17141,1326\n" +
"1572585051676,1572585038R,1,17347,17139,1326\n" +
"1572585051681,1572585038R,1,17360,17136,1327\n" +
"1572585051686,1572585038R,1,17375,17133,1328\n" +
"1572585051691,1572585038R,1,17390,17131,1329\n" +
"1572585051696,1572585038R,1,17406,17128,1330\n" +
"1572585051701,1572585038R,1,17424,17125,1330\n" +
"1572585051706,1572585038R,1,17444,17122,1330\n" +
"1572585051711,1572585038R,1,17468,17118,1330\n" +
"1572585051716,1572585038R,1,17493,17114,1328\n" +
"1572585051721,1572585038R,1,17520,17112,1327\n" +
"1572585051726,1572585038R,1,17546,17110,1323\n" +
"1572585051731,1572585038R,1,17571,17111,1322\n" +
"1572585051736,1572585038R,1,17598,17114,1321\n" +
"1572585051741,1572585038R,1,17625,17117,1319\n" +
"1572585051746,1572585038R,1,17653,17120,1319\n" +
"1572585051751,1572585038R,1,17680,17124,1317\n" +
"1572585051756,1572585038R,1,17707,17127,1317\n" +
"1572585051761,1572585038R,1,17731,17131,1316\n" +
"1572585051766,1572585038R,1,17752,17134,1314\n" +
"1572585051771,1572585038R,1,17771,17136,1312\n" +
"1572585051776,1572585038R,1,17788,17138,1307\n" +
"1572585051781,1572585038R,1,17803,17139,1304\n" +
"1572585051786,1572585038R,1,17816,17140,1301\n" +
"1572585051791,1572585038R,1,17828,17141,1301\n" +
"1572585051796,1572585038R,1,17838,17143,1302\n" +
"1572585051801,1572585038R,1,17838,17143,1304\n" +
"1572585051806,1572585038R,1,17854,17146,1306\n" +
"1572585051811,1572585038R,1,17854,17146,1310\n" +
"1572585051816,1572585038R,1,17868,17149,1316\n" +
"1572585051821,1572585038R,1,17878,17150,1321\n" +
"1572585051826,1572585038R,1,17890,17152,1326\n" +
"1572585051831,1572585038R,1,17905,17152,1332\n" +
"1572585051836,1572585038R,1,17920,17153,1340\n" +
"1572585051841,1572585038R,1,17934,17153,1351\n" +
"1572585051846,1572585038R,1,17948,17154,1360\n" +
"1572585051851,1572585038R,1,17963,17154,1369\n" +
"1572585051856,1572585038R,1,17979,17154,1376\n" +
"1572585051861,1572585038R,1,17997,17155,1380\n" +
"1572585051866,1572585038R,1,18015,17156,1385\n" +
"1572585051871,1572585038R,1,18032,17157,1391\n" +
"1572585051876,1572585038R,1,18051,17159,1393\n" +
"1572585051881,1572585038R,1,18071,17161,1398\n" +
"1572585051886,1572585038R,1,18092,17164,1403\n" +
"1572585051891,1572585038R,1,18113,17167,1406\n" +
"1572585051896,1572585038R,1,18134,17171,1411\n" +
"1572585051901,1572585038R,1,18154,17173,1412\n" +
"1572585051906,1572585038R,1,18171,17176,1414\n" +
"1572585051911,1572585038R,1,18188,17179,1416\n" +
"1572585051916,1572585038R,1,18203,17181,1416\n" +
"1572585051921,1572585038R,1,18216,17184,1417\n" +
"1572585051926,1572585038R,1,18230,17186,1417\n" +
"1572585051931,1572585038R,1,18244,17188,1416\n" +
"1572585051936,1572585038R,1,18258,17190,1417\n" +
"1572585051941,1572585038R,1,18272,17193,1418\n" +
"1572585051946,1572585038R,1,18286,17195,1418\n" +
"1572585051951,1572585038R,1,18300,17197,1417\n" +
"1572585051956,1572585038R,1,18313,17198,1417\n" +
"1572585051961,1572585038R,1,18329,17198,1416\n" +
"1572585051966,1572585038R,1,18347,17199,1415\n" +
"1572585051971,1572585038R,1,18368,17200,1416\n" +
"1572585051976,1572585038R,1,18389,17201,1416\n" +
"1572585051981,1572585038R,1,18411,17202,1416\n" +
"1572585051986,1572585038R,1,18434,17204,1415\n" +
"1572585051991,1572585038R,1,18456,17207,1413\n" +
"1572585051996,1572585038R,1,18478,17209,1413\n" +
"1572585052001,1572585038R,1,18496,17212,1413\n" +
"1572585052006,1572585038R,1,18512,17214,1415\n" +
"1572585052011,1572585038R,1,18523,17216,1416\n" +
"1572585052016,1572585038R,1,18534,17217,1419\n" +
"1572585052021,1572585038R,1,18534,17217,1420\n" +
"1572585052026,1572585038R,1,18548,17218,1423\n" +
"1572585052031,1572585038R,1,18548,17218,1427\n" +
"1572585052036,1572585038R,1,18548,17218,1429\n" +
"1572585052041,1572585038R,1,18557,17218,1433\n" +
"1572585052046,1572585038R,1,18557,17218,1435\n" +
"1572585052051,1572585038R,1,18557,17218,1435\n" +
"1572585052056,1572585038R,1,18557,17218,1433\n" +
"1572585052061,1572585038R,1,18557,17218,1432\n" +
"1572585052066,1572585038R,1,18557,17218,1428\n" +
"1572585052071,1572585038R,1,18557,17218,1423\n" +
"1572585052076,1572585038R,1,18557,17218,1417\n" +
"1572585052081,1572585038R,1,18557,17218,1406\n" +
"1572585052086,1572585038R,1,18557,17218,1392\n" +
"1572585052091,1572585038R,1,18557,17218,1371\n" +
"1572585052096,1572585038R,1,18557,17218,1341\n" +
"1572585052101,1572585038R,1,18557,17218,1297\n" +
"1572585052106,1572585038R,1,18557,17218,1234\n" +
"1572585052111,1572585038R,1,18557,17218,1150\n" +
"1572585052116,1572585038R,1,18557,17218,1032\n" +
"1572585052121,1572585038R,1,18557,17218,875\n" +
"1572585052126,1572585038R,1,18560,17207,681\n" +
"1572585052131,1572585038R,1,18560,17207,488\n" +
"1572585052136,1572585038R,1,18551,17200,336\n" +
"1572585052141,1572585038R,1,18539,17196,1\n" +
"1572585052146,1572585038R,1,18539,17196,1\n" +
"1572585053851,1572585038R,2,16925,17027,201\n" +
"1572585053856,1572585038R,2,16925,17027,201\n" +
"1572585053861,1572585038R,2,16925,17027,202\n" +
"1572585053866,1572585038R,2,16922,17037,203\n" +
"1572585053871,1572585038R,2,16922,17037,207\n" +
"1572585053876,1572585038R,2,16922,17037,212\n" +
"1572585053881,1572585038R,2,16922,17037,217\n" +
"1572585053886,1572585038R,2,16922,17037,221\n" +
"1572585053891,1572585038R,2,16922,17037,223\n" +
"1572585053896,1572585038R,2,16922,17037,225\n" +
"1572585053901,1572585038R,2,16913,17038,226\n" +
"1572585053906,1572585038R,2,16913,17038,227\n" +
"1572585053911,1572585038R,2,16913,17038,229\n" +
"1572585053916,1572585038R,2,16904,17035,231\n" +
"1572585053921,1572585038R,2,16904,17035,236\n" +
"1572585053926,1572585038R,2,16904,17035,244\n" +
"1572585053931,1572585038R,2,16904,17035,257\n" +
"1572585053936,1572585038R,2,16904,17035,275\n" +
"1572585053941,1572585038R,2,16904,17035,298\n" +
"1572585053946,1572585038R,2,16904,17035,325\n" +
"1572585053951,1572585038R,2,16904,17035,355\n" +
"1572585053956,1572585038R,2,16904,17035,389\n" +
"1572585053961,1572585038R,2,16904,17035,422\n" +
"1572585053966,1572585038R,2,16904,17035,453\n" +
"1572585053971,1572585038R,2,16904,17035,480\n" +
"1572585053976,1572585038R,2,16904,17035,503\n" +
"1572585053981,1572585038R,2,16904,17035,524\n" +
"1572585053986,1572585038R,2,16904,17035,544\n" +
"1572585053991,1572585038R,2,16904,17035,562\n" +
"1572585053996,1572585038R,2,16904,17035,583\n" +
"1572585054001,1572585038R,2,16904,17035,605\n" +
"1572585054006,1572585038R,2,16904,17035,629\n" +
"1572585054011,1572585038R,2,16904,17035,654\n" +
"1572585054016,1572585038R,2,16904,17035,678\n" +
"1572585054021,1572585038R,2,16904,17035,698\n" +
"1572585054026,1572585038R,2,16904,17035,716\n" +
"1572585054031,1572585038R,2,16904,17035,729\n" +
"1572585054036,1572585038R,2,16904,17035,740\n" +
"1572585054041,1572585038R,2,16904,17035,751\n" +
"1572585054046,1572585038R,2,16904,17035,762\n" +
"1572585054051,1572585038R,2,16904,17035,775\n" +
"1572585054056,1572585038R,2,16904,17035,788\n" +
"1572585054061,1572585038R,2,16904,17035,800\n" +
"1572585054066,1572585038R,2,16904,17035,811\n" +
"1572585054071,1572585038R,2,16904,17035,822\n" +
"1572585054076,1572585038R,2,16904,17035,832\n" +
"1572585054081,1572585038R,2,16904,17035,841\n" +
"1572585054086,1572585038R,2,16904,17035,850\n" +
"1572585054091,1572585038R,2,16904,17035,859\n" +
"1572585054096,1572585038R,2,16904,17035,869\n" +
"1572585054101,1572585038R,2,16904,17035,879\n" +
"1572585054106,1572585038R,2,16901,17044,892\n" +
"1572585054111,1572585038R,2,16901,17044,906\n" +
"1572585054116,1572585038R,2,16901,17044,922\n" +
"1572585054121,1572585038R,2,16901,17044,940\n" +
"1572585054126,1572585038R,2,16901,17044,958\n" +
"1572585054131,1572585038R,2,16901,17044,977\n" +
"1572585054136,1572585038R,2,16901,17044,993\n" +
"1572585054141,1572585038R,2,16901,17044,1007";
    //private String tester;
    private Context mContext;
    public DataM (Context context) {
        mContext = context;
    }

    public String readFromAssets(String fileName, Context context) {
        StringBuilder returnString = new StringBuilder();
        InputStream fIn = null;
        InputStreamReader isr = null;
        BufferedReader input = null;
        try {
            fIn = context.getResources().getAssets()
                    .open(fileName, Context.MODE_WORLD_READABLE);
            isr = new InputStreamReader(fIn);
            input = new BufferedReader(isr);
            String line;
            while ((line = input.readLine()) != null) {
                returnString.append(line + "\n");
            }
        } catch (Exception e) {
            e.getMessage();
        } finally {
            try {
                if (isr != null)
                    isr.close();
                if (fIn != null)
                    fIn.close();
                if (input != null)
                    input.close();
            } catch (Exception e2) {
                e2.getMessage();
            }
        }
        return returnString.toString();
    }

    private String splitByLine(int pos) {
        String[] result =  Pattern.compile("\n").split(readFromAssets("sampleData.txt", mContext));
        //String[] result =  readFromAssets("sampleData.txt", mContext).split(":");
        return result[pos];
    }

    private int lengthOf () {
        String[] result =  Pattern.compile("\n").split(readFromAssets("sampleData.txt", mContext));
        //String[] result =  readFromAssets("sampleData.txt", mContext).split(":");
        return result.length;
    }

    public long[][] splitByComma() {
        long[][] indiv = new long[lengthOf()/700 + 1][];
        int k = 0;
        for (int i = 0; i < lengthOf(); i+=700) {

            String[] middleman = Pattern.compile(",").split(splitByLine(i));
            long[] intiLong = new long[6];
            intiLong[0] = Long.parseLong(middleman[0]);
            for (int j = 2; j < 5; j++) {
                // starts at 2 to remove ID
                intiLong[j] = Long.parseLong(middleman[j]);
            }
            indiv[k] = intiLong;
            k++;
        }
        return indiv;
    }

}
